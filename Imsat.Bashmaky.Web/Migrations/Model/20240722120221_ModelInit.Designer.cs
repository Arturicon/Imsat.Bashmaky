// <auto-generated />
using System;
using Imsat.Bashmaky.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Imsat.Bashmaky.Web.Migrations.Model
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240722120221_ModelInit")]
    partial class ModelInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("model")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("BaseEntitySequence");

            modelBuilder.Entity("BashmakRailway", b =>
                {
                    b.Property<int>("BashmaksId")
                        .HasColumnType("integer");

                    b.Property<int>("RailwaysId")
                        .HasColumnType("integer");

                    b.HasKey("BashmaksId", "RailwaysId");

                    b.HasIndex("RailwaysId");

                    b.ToTable("BashmakRailway", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.BaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('model.\"BaseEntitySequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Imei")
                        .HasColumnType("text");

                    b.Property<float>("LAT")
                        .HasColumnType("real");

                    b.Property<float>("LON")
                        .HasColumnType("real");

                    b.Property<int>("St")
                        .HasColumnType("integer");

                    b.Property<int?>("StationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TS")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("VDD")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("BaseEntity", "model");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Railway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Railways", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stations", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.TrainAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AttachingFitter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("AttachingTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DetachingFitter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DetachingTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RailwayNumber")
                        .HasColumnType("integer");

                    b.Property<int>("WagonNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TrainAttachments", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.Bashmak", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<int?>("BoxId")
                        .HasColumnType("integer");

                    b.Property<int>("Connection")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TrainAttachmentId")
                        .HasColumnType("integer");

                    b.HasIndex("BoxId");

                    b.HasIndex("TrainAttachmentId");

                    b.ToTable("Bashmaks", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.Box", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<int>("Connection")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Boxes", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.SignalBashmak", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.ToTable("BashmakSignals", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.SignalBox", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.ToTable("BoxSignals", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.SignalTerminal", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<string>("NET")
                        .HasColumnType("text");

                    b.Property<int>("RSSI")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.ToTable("TerminalSignals", "model");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.Terminal", b =>
                {
                    b.HasBaseType("Imsat.Bashmaky.Model.Database.Entities.BaseEntity");

                    b.Property<int>("Connection")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("NET")
                        .HasColumnType("text");

                    b.Property<int>("RSSI")
                        .HasColumnType("integer");

                    b.ToTable("Terminals", "model");
                });

            modelBuilder.Entity("BashmakRailway", b =>
                {
                    b.HasOne("Imsat.Bashmaky.Model.Database.Entities.Devices.Bashmak", null)
                        .WithMany()
                        .HasForeignKey("BashmaksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imsat.Bashmaky.Model.Database.Entities.Railway", null)
                        .WithMany()
                        .HasForeignKey("RailwaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.BaseEntity", b =>
                {
                    b.HasOne("Imsat.Bashmaky.Model.Database.Entities.Station", "Station")
                        .WithMany("Signals")
                        .HasForeignKey("StationId");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.Bashmak", b =>
                {
                    b.HasOne("Imsat.Bashmaky.Model.Database.Entities.Devices.Box", "Box")
                        .WithMany("Bashmaks")
                        .HasForeignKey("BoxId");

                    b.HasOne("Imsat.Bashmaky.Model.Database.Entities.TrainAttachment", null)
                        .WithMany("Bashmakies")
                        .HasForeignKey("TrainAttachmentId");

                    b.Navigation("Box");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Station", b =>
                {
                    b.Navigation("Signals");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.TrainAttachment", b =>
                {
                    b.Navigation("Bashmakies");
                });

            modelBuilder.Entity("Imsat.Bashmaky.Model.Database.Entities.Devices.Box", b =>
                {
                    b.Navigation("Bashmaks");
                });
#pragma warning restore 612, 618
        }
    }
}
